syntax = "proto3";

import "lib/datetime.proto";
import "lib/geospatial.proto";
import "lib/openstreetmap.proto";

package Metadata;

message GetAreaMetadataInput {
  Geospatial.Coordinates coordinates = 1;
  int64 radiusMeters = 2;
  int32 maxImages = 3;
}

message GetPoiMetadataInput {
  int64 id = 1;
  Geospatial.Coordinates coordinates = 2;
  string name = 3;
  int32 maxImages = 4;
}

service Metadata {
  rpc GetAreaMetadata(GetAreaMetadataInput) returns (stream MetadataItem);
  rpc GetPoiMetadata(GetPoiMetadataInput) returns (stream MetadataItem);
}

message Attribution {
  enum Source {
    Unknown = 0;
    GeographUK = 1;
    Mapillary = 2;
    Flickr = 3;
    WikimediaCommons = 4;
    GeographDE = 5;
    Wikimapia = 6;
    Wikidata = 7;
    OpenStreetMap = 8;
  }

  string name = 1;
  string license = 2;
  string url = 3;
  Source source = 4;
}

message ImageUrl {
  string canonical = 1;
  string small = 2;
  string medium = 3;
  string large = 4;
}

message Image {
  ImageUrl url = 1;
  DateTime.Timestamp createdAt = 2;
  Geospatial.Coordinates coordinates = 3;
}

message Address {
  string street = 1;
  string city = 2;
  string country = 3;
  string postcode = 4;
  string housenumber = 5;
  string state = 6;
}

message TextMetadata {
  string name = 1;
  Address address = 2;
  string phone = 3;
  string amenity = 5;
}

message CommentAuthor {
  string name = 1;
  string avatarUrl = 2;
  string profileUrl = 3;
}

message Comment {
  string text = 1;
  DateTime.Timestamp createdAt = 2;
  CommentAuthor author = 3;
  repeated Comment replies = 4;
}

message Description {
  string text = 1;
}

message Employment {
  enum Title {
    Other = 0;
    Founder = 1;
  }

  Title title = 1;
  string name = 2;
}

message Link {
  string url = 2;
}

message Links {
  repeated Link list = 1;
}

message Defibrillator {
  OpenStreetMap.Access access = 1;
  string location = 2;
  OpenStreetMap.Indoor indoor = 3;
  string phone = 4;
  string code = 5;
  OpenStreetMap.Locked locked = 6;
  int32 level = 7;
  string description = 8;
  string manufacturer = 9;
  string model = 10;
  string cabinet = 11;
}

message OpeningHoursInterval {
  DateTime.Timestamp from = 1;
  DateTime.Timestamp to = 2;
  bool uncertain = 3;
  string comment = 4;
}

message OpeningHours {
  repeated OpeningHoursInterval intervals = 1;
  bool isWeekStable = 2;
  bool isCurrentlyOpen = 3;
  DateTime.Timestamp nextChange = 4;
  string fallback = 5;
  string tz = 6;
  bool is247 = 7;
}

message MetadataItem {
  Attribution attribution = 1;

  oneof item {
    Image image = 2;
    TextMetadata metadata = 3;
    Comment comment = 4;
    Description description = 5;
    Geospatial.Coordinates coordinates = 6;
    ImageUrl logo = 7;
    Links links = 8;
    OpeningHours openingHours = 10;
    string wikidataId = 11;
    Defibrillator defibrillator = 12;
  }
}
